@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
    <!-- Jeśli użytkownik jest zalogowany, wyświetlamy następujące elementy -->
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                <i class="bi bi-person-circle"></i> Witaj, @User.Identity?.Name!
            </a>
        </li>

        <!-- Jeśli użytkownik ma rolę "Admin", wyświetlamy opcję dodawania samochodów -->
        @if (User.IsInRole("Admin"))
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-controller="Car" asp-action="Create">
                    <i class="bi bi-plus-square"></i> Dodaj samochód
                </a>
            </li>
        }

        <!-- Przycisk wylogowania -->
        <li class="nav-item">
            <form asp-controller="Account" asp-action="Logout" method="post" class="form-inline">
                @Html.AntiForgeryToken()  <!-- Token zabezpieczający przed atakami CSRF -->
                <button type="submit" class="nav-link btn btn-link text-dark">
                    <i class="bi bi-box-arrow-right"></i> Wyloguj się
                </button>
            </form>
        </li>
    }
    else
    {
        <!-- Jeśli użytkownik nie jest zalogowany, wyświetlamy opcje rejestracji i logowania -->
        <!-- Link do strony rejestracji -->
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">
                <i class="bi bi-person-plus"></i> Zarejestruj się
            </a>
        </li>

        <!-- Link do strony logowania -->
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">
                <i class="bi bi-box-arrow-in-right"></i> Zaloguj się
            </a>
        </li>
    }
</ul>
